<?php defined('SYSPATH') or die('No direct script access.');/** * @version SVN: $Id:$ */class Model_Category extends ORM{	protected $_table_name = 'categories';	protected $_has_many = array(		'children' => array(			'model' => 'Category',			'foreign_key' => 'parent_id'		),		'product' => array(			'model' => 'Product',			'through' => 'categories_product',			'foreign_key' => 'category_id',			'far_key' => 'product_id',			'required' => true		),		'brand' => array(			'model' => 'Brand',			'far_key' => 'brand_id',			'foreign_key' => 'category_id',			'through' => 'brand_category'		),		'filters' => array(			'model' => 'Filter',			'foreign_key' => 'category_id'		)	);	protected $_belongs_to = array(//		'section' => array(//			'model' => 'Section',//			'foreign_key' => 'section_id'//		),		'parent' => array(			'model' => 'Category',			'foreign_key' => 'parent_id'		)	);	protected $_grid_columns = array(		'name' => array(			'type' => 'name',			'route_str' => 'admin-category:edit?id=${id}',			'external_url' => 'site-category:index?category=${url}&category=${url}'		),		'active' => 'bool',		'description' => array(			'width' => '40%',			'route_str' => 'admin-category:edit?id=${id}',			'type' => 'more'		),		'filters' => array(			'type' => 'link',			'route_str' => 'admin-filter:index?parent=${id}',			'title' => '[${filters|count}]'		),		'add_child' => array(			'width' => '50',			'type' => 'link',			'route_str' => 'admin-category:create?id=${id}',			'title' => '<i class="fa fa-arrow-down"></i>',			'alternative' => 'Добавить вложенность',			'color' => 'blue'		),		'delete' => array(			'width' => '50',			'type' => 'link',			'route_str' => 'admin-category:delete?id=${id}',			'title' => '<i class="fa fa-trash-o"></i>',			'color' => 'red',			'alternative' => 'Удалить',			'confirm' => 'Вы уверены?'		)	);	protected $_grid_options = array('order_by' => 'name', 'order_direction' => 'ASC');	public function labels()	{		return array(			'name' => 'Название',			's_title' => 'Seo title',			'image' => 'Изображение',			's_description' => 'Seo description',			's_keywords' => 'Seo keywords',			'url' => 'URL',			'active' => 'Активность',			'position' => 'Позиция',			'description' => 'Описание',			'h1' => 'Заголовок страницы H1',			'video' => 'Ссылка на видео'		);	}	public function rules()	{		return array(			'name' => array(				array('not_empty')			)		);	}	public function allow_delete()	{		return !$this->children->count_all();	}	public function save(Validation $validation = null)	{		if ($this->parent->loaded()) {			$this->level = $this->parent->level + 1;		}		$this->md5_url = md5($this->url);		$this->updated_at = date('Y-m-d H:i:s');		return parent::save($validation);	}	public function form()	{		return new Form_Admin_Category($this);	}	public function fetch_category_by_url($url)	{		return $this->where('active', '=', true)->where('url', '=', $url)->find();	}//	public function fetchAllSortName()//	{//		return $this->where('category.active', '=', true)->order_by('category.name', 'ASC')->with('section')->find_all();//	}	public function fetch_cat_by_prod_id($id)	{		return $this->where('active', '=', true)->where('product_id', '=', $id)->find()->as_array();	}	public function fetch_children_list(ORM $category, array &$categories)	{		$childrens = $category->children->find_all()->as_array();		if ($childrens) {			foreach ($childrens as $children) {				$name = '';				for ($i = 1; $i < $children->level; $i++) {					$name .= '> ';				}				$categories[$children->id] = $name . $children->name;				$most_clildrens = $children->children->find_all()->as_array();				if ($most_clildrens) {					$this->fetch_children_list($children, $categories);				}			}		}	}	public function fetch_categories_list($model_categories)	{		$relations = array();		$categories = array();		$all_categories = array();		foreach ($model_categories as $category) {			if ($category->parent_id) {				$relations[$category->parent_id] = $category->id;			}			$all_categories[$category->id] = $category;		}		foreach ($model_categories as $category) {			if (!$category->parent_id) {				$categories[$category->id] = $category->name;				$category->fetch_children_list($category, $categories);			}		}		return $categories;	}	public function fetch_full_categories(ORM $category, $url)	{		$parent = $category;		$ids = array($category->id);		for ($i = $category->level; $i >= 1; $i--) {			$parent = $parent->parent;			$categories = ORM::factory('Category')->where('level', '=', $i)->order_by('position', 'DESC')->find_all();			foreach ($categories as $current) {				if ($current->parent_id == $parent->id) {					$ids[] = $parent->id;					$full_categories[$current->level][] = $current;				}			}		}		$children = $category->children->order_by('position', 'DESC')->find_all()->as_array();		foreach ($children as $current) {			$full_categories[$current->level][] = $current;		}		ksort($full_categories);		return array('categories' => $full_categories, 'ids' => array_unique($ids));	}	public function getSiteUrl()	{		return '/cat/' . $this->url;	}	public function selectInsert($name)	{		$category = ORM::factory('Category')->where('name', '=', $name)->find();		$url = Helpers_Url::translit($name);		$category->url = $url;		$category->md5_url = md5($url);				if (!$category->id) {			$category->name = $name;		}			$category->save();		$category_id = $category->id;		unset($category);				return $category_id;	}	private function fetch_parent_categories(&$child_categories, ORM $category)	{		$child_categories[] = $category->parent;		if ($category->parent->parent_id) {			$this->fetch_parent_categories($child_categories, $category->parent);		}	}    public function getPriceValue()    {        $price = $this->name;        /*         * <?php if($price && !$new_price) { ?><span class="price-new"><?php echo $price ?>.руб</span><?php }?>            <?php if($price && $new_price) { ?><span class="price-new"><?php echo $new_price ?>.руб</span><span class="price-old"><?php echo $price?>.руб</span><?php }?>         */       // return number_format($price, 0, ' ', ' ');        return $price;    }}