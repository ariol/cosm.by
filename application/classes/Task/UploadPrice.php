<?php defined('SYSPATH') or die('No direct script access.');class Task_UploadPrice extends Minion_Task{    protected $_options = array(		'force'    );	    protected function _execute(array $params)    {		if (!Kohana::$config->load('price.update') && !Arr::get($params, 'force')) {			exit();		}		header('Content-Type: text/html; charset=utf-8');				$handle = fopen(DOCROOT . 'EXP.csv', "r+");		$line = 0;        $last_lines = '';        $lines_id = 0;		$last_cagegory = '';		$category_id = 0;				$last_brand = '';		$brand_id = 0;		$PDO = ORM::factory('Product')->query('UPDATE product SET active = 0');				Kohana::$config->load('price')->set('update', 0);				while (!feof($handle)) {			$matches = fgetcsv($handle, 0, ';');					if (!$line) {				$line++;				continue;			}						if (!isset($matches[2])) {				continue;			}            $brand = iconv('windows-1251', 'utf-8', $matches[7]);            $lines = iconv('windows-1251', 'utf-8', $matches[8]);			$name = trim(iconv('windows-1251', 'utf-8', $matches[3]));            $article = trim($matches[12]);			$url = Helpers_Url::translit($brand . '-' .$article);			$product = ORM::factory('Product', array('md5_url' => md5($url)));            $category = iconv('windows-1251', 'utf-8', $matches[2]);			$category = trim($category);						if ($category && $last_cagegory != $category) {				$category_id = ORM::factory('Category')->selectInsert($category);				$last_cagegory = $category;			}			if ($lines && $last_lines != $lines) {                $lines_id = ORM::factory('Line')->selectInsert($lines);                $last_lines = $lines;			}			//			if (!$product->id) {                if ($last_brand != $brand) {                    $brand_id = ORM::factory('Brand')->selectInsert($brand);                    $last_brand = $brand;                } //               $product = ORM::factory('Product');//            }//			} elseif (!$product->brand_id) {//				if ($last_brand != $brand) {//					$brand_id = ORM::factory('Brand')->selectInsert($brand);//					$last_brand = $brand;//				}//			}//            if (!$product->id) {//                if ($last_lines != $lines) {//                    $lines_id = ORM::factory('Line')->selectInsert($lines);//                    $last_lines = $lines;//                }//                $product = ORM::factory('Product');//            } elseif (!$product->line_id) {//                if ($last_lines != $lines) {//                    $lines_id = ORM::factory('Line')->selectInsert($lines);//                    $last_lines = $lines;//                }//            }			$productData = array(                'id' => intval($matches[1]),                'name' => $name,                'parent_product' => intval($matches[6]) ? intval($matches[6]) : null,				'price' => intval($matches[10]),				'purchase_price' => intval($matches[9]),				'new_price' => intval($matches[11]),                'url' => $url,                'md5_url' =>md5($url),				'article' => $article,				'volume' => trim($matches[5]),				'active' => 1,				'short_content' => trim(iconv('windows-1251', 'utf-8', $matches[14])),				'brand_id' => $brand_id,                'line_id' => $lines_id,				'category_id' => $category_id			);			$product = ORM::factory('Product')->insertSelect($product, $productData);            if (!$product->main_image) {                $result = $this->downloadImage($product);                if ($result) {                    $product->main_image = $result;                    $product->active = 1;                } else {                    $product->active = 0;                }                $product->update();            }			unset($categoty_id);			unset($categories);			unset($productData);			unset($product);			unset($categories_str);			unset($name);			unset($url);			unset($category);			unset($matches);        }        fclose($handle);	}    private function downloadImage(ORM $product)    {        $main_image = '';        $dir = PUBLIC_ROOT . 'files/product/' . $product->id . '/';        if (!is_dir($dir)) {            mkdir($dir);        }        $image_url = PUBLIC_ROOT . 'files/temp/'.$product->article . '.jpg';        $filename = md5($image_url . microtime()) . '.jpg';        if (file_exists($image_url)) {            copy($image_url, $dir . $filename);            $main_image = '/files/product/' . $product->id . '/' . $filename;        }        return $main_image;    }}